{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Projects\\\\desktopninjaapp\\\\client\\\\src\\\\components\\\\NavComponents\\\\Categories\\\\Processors.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Spinner, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'; //CONNECT REDUX TO COMPONENT\n\nimport { connect } from 'react-redux';\nimport { getItems, postToCart } from '../../../redux/actions/productActions';\nimport PropTypes from 'prop-types';\nexport class Processors extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addToCart = (brand, name) => {\n      this.props.postToCart(brand, name);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const products = this.props.products;\n    const productList = products.length ? products.map(product => {\n      return React.createElement(Container, {\n        key: product._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Product #: \", product._id), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: require(\"../../../images/\".concat(product.imgLocalPath, \".jpg\")),\n        alt: \"Intel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, product.brand), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, product.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Cores: \", product.cores), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Threads: \", product.threads), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Base Frequency: \", product.base_frequency), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Turbo Frequency(Max): \", product.turbon_frequency), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Cache: \", product.cache), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Memory Type: \", product.memory_type)), React.createElement(Link, {\n        to: '/processor/' + product._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"View Full Specification\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"$\", product.price), React.createElement(Button, {\n        color: \"dark\",\n        onClick: (brand = 'Intel', name = 'i7') => this.addToCart(brand, name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Buy\"))));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Processors\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), productList);\n  }\n\n}\nProcessors.propTypes = {\n  getItems: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products.products\n  };\n}; // const mapDispatchToProps = dispatch => {\n//     return {\n//         postToCart: () => dispatch({ type: 'POST_CART'})\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  getItems,\n  postToCart\n})(Processors);","map":{"version":3,"sources":["Z:\\Projects\\desktopninjaapp\\client\\src\\components\\NavComponents\\Categories\\Processors.js"],"names":["React","Component","Container","Row","Col","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Spinner","Button","Link","connect","getItems","postToCart","PropTypes","Processors","addToCart","brand","name","props","componentDidMount","render","products","productList","length","map","product","_id","require","imgLocalPath","cores","threads","base_frequency","turbon_frequency","cache","memory_type","marginBottom","price","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col, Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Spinner, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n//CONNECT REDUX TO COMPONENT\nimport { connect } from 'react-redux'\n\nimport { getItems, postToCart } from '../../../redux/actions/productActions'\n\nimport PropTypes from 'prop-types'\n\nexport class Processors extends Component {\n\n    componentDidMount() {\n        this.props.getItems()\n    }\n\n    addToCart = (brand, name) => {\n        this.props.postToCart(brand, name)\n    }\n\n    \n\n    render() {\n        const { products } = this.props\n        \n        const productList = products.length ? (products.map(product => {\n            return (\n                <Container key={product._id}>\n                <Row>\n                    <Col>\n                    Product #: {product._id}\n                    </Col>\n\n                    <Col>\n                        <Card>\n                          <CardImg top width=\"100%\" src={require(`../../../images/${product.imgLocalPath}.jpg`)} alt=\"Intel\" />\n                            <CardBody>\n                              <CardTitle>{product.brand}</CardTitle>\n                              <CardSubtitle>{product.name}</CardSubtitle>\n                              <CardText></CardText>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    \n                    <Col>\n                    <div>\n                        <li>Cores: {product.cores}</li>\n                        <li>Threads: {product.threads}</li>\n                        <li>Base Frequency: {product.base_frequency}</li>\n                        <li>Turbo Frequency(Max): {product.turbon_frequency}</li>\n                        <li>Cache: {product.cache}</li>\n                        <li>Memory Type: {product.memory_type}</li>\n                    </div>\n\n                    <Link to={'/processor/'+ product._id}>\n                    <Button\n                    color='dark'\n                    style={{marginBottom: '1rem'}}\n                    >View Full Specification\n                    </Button>\n                    </Link>\n\n                    </Col>\n\n                    <Col>\n                    <h1>${product.price}</h1>\n                    <Button\n                    color='dark'\n                    onClick={(brand='Intel',name ='i7') => this.addToCart(brand,name)}>Buy</Button>\n                    </Col>\n                </Row>\n                </Container>\n            )\n        })\n        ) : (\n            <div>\n                <Spinner color=\"primary\" />\n            </div>\n        )\n        return(\n            <div>\n                <h1>Processors</h1>\n                <br></br>\n                {productList}\n            </div>\n        )\n    }\n}\n\nProcessors.propTypes = {\n    getItems: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products.products\n    }\n}\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         postToCart: () => dispatch({ type: 'POST_CART'})\n//     }\n// }\n\nexport default connect(mapStateToProps, { getItems, postToCart })(Processors)"]},"metadata":{},"sourceType":"module"}