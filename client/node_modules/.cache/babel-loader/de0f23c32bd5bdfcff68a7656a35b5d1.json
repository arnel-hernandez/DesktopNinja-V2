{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Projects\\\\desktopninjaapp\\\\client\\\\src\\\\components\\\\NavComponents\\\\Categories\\\\ViewSpecs\\\\ViewSpecs.js\";\nimport React, { Component } from 'react';\nimport { Spinner, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getItemsId } from '../../../../redux/actions/productActions';\nimport PropTypes from 'prop-types';\nexport class ViewSpecs extends Component {\n  componentDidMount() {\n    this.props.getItemsId(this.props.match.params.id);\n  }\n\n  render() {\n    const viewSpecs = this.props.viewSpecs;\n    console.log(viewSpecs);\n    const viewSpecification = viewSpecs.length ? viewSpecs.map(viewspec => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/processors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Back\"))), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, viewspec.brand, \" \", viewspec.name), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Cores: \", viewspec.cores), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Threads: \", viewspec.threads), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Base Frequency: \", viewspec.base_frequency), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Turbo Frequency(Max): \", viewspec.turbon_frequency), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Cache: \", viewspec.cache), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Memory Type: \", viewspec.memory_type));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, viewSpecification);\n  }\n\n}\nViewSpecs.propTypes = {\n  getItems: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    viewSpecs: state.viewSpecs.viewSpecs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItemsId\n})(ViewSpecs);","map":{"version":3,"sources":["Z:\\Projects\\desktopninjaapp\\client\\src\\components\\NavComponents\\Categories\\ViewSpecs\\ViewSpecs.js"],"names":["React","Component","Spinner","Button","connect","Link","getItemsId","PropTypes","ViewSpecs","componentDidMount","props","match","params","id","render","viewSpecs","console","log","viewSpecification","length","map","viewspec","brand","name","cores","threads","base_frequency","turbon_frequency","cache","memory_type","propTypes","getItems","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,YAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,0CAA3B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAErCQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,SADH,GACiB,KAAKL,KADtB,CACGK,SADH;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,UAAMG,iBAAiB,GAAGH,SAAS,CAACI,MAAV,GAAoBJ,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAAI;AACpE,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACA,QAAA,KAAK,EAAC,MADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,QAAQ,CAACC,KAAd,OAAsBD,QAAQ,CAACE,IAA/B,CAPJ,EAQQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYF,QAAQ,CAACG,KAArB,CARR,EASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAcH,QAAQ,CAACI,OAAvB,CATR,EAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqBJ,QAAQ,CAACK,cAA9B,CAVR,EAWQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA2BL,QAAQ,CAACM,gBAApC,CAXR,EAYQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYN,QAAQ,CAACO,KAArB,CAZR,EAaQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkBP,QAAQ,CAACQ,WAA3B,CAbR,CAFJ;AAkBH,KAnB6C,CAApB,GAoBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CApBJ;AAyBA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,iBADL,CADJ;AAKH;;AAvCoC;AA0CzCV,SAAS,CAACsB,SAAV,GAAsB;AAClBC,EAAAA,QAAQ,EAAExB,SAAS,CAACyB,IAAV,CAAeC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpB,IAAAA,SAAS,EAAEoB,KAAK,CAACpB,SAAN,CAAgBA;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAAC8B,eAAD,EAAkB;AAAE5B,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,SAAzC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Spinner, Button } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getItemsId } from '../../../../redux/actions/productActions'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class ViewSpecs extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItemsId(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        const { viewSpecs } = this.props\r\n        console.log(viewSpecs)\r\n        const viewSpecification = viewSpecs.length ? (viewSpecs.map(viewspec => {\r\n            return(\r\n\r\n                <div>\r\n                    <div>\r\n                        <Link to='/processors'>\r\n                        <Button\r\n                        color='dark'>Back</Button>\r\n                        </Link>\r\n                    </div>\r\n                    <h1>{viewspec.brand} {viewspec.name}</h1>\r\n                        <li>Cores: {viewspec.cores}</li>\r\n                        <li>Threads: {viewspec.threads}</li>\r\n                        <li>Base Frequency: {viewspec.base_frequency}</li>\r\n                        <li>Turbo Frequency(Max): {viewspec.turbon_frequency}</li>\r\n                        <li>Cache: {viewspec.cache}</li>\r\n                        <li>Memory Type: {viewspec.memory_type}</li>\r\n                </div>\r\n            )\r\n        })) : (\r\n            <div>\r\n                <Spinner color=\"primary\" />\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                {viewSpecification}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nViewSpecs.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        viewSpecs: state.viewSpecs.viewSpecs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getItemsId })(ViewSpecs)"]},"metadata":{},"sourceType":"module"}