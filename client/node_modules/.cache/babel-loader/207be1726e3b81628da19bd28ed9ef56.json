{"ast":null,"code":"import axios from 'axios';\nimport { GET_PRODUCT, PRODUCT_LOADING, GET_SPECS } from './typesOfAction';\nexport const getItems = () => dispatch => {\n  dispatch(productLoading());\n  axios.get('http://localhost:5000/processors').then(res => dispatch({\n    type: GET_PRODUCT,\n    payload: res.data\n  }));\n};\nexport const getItemsId = id => dispatch => {\n  dispatch(productLoading());\n  axios.get('http://localhost:5000/processors/' + id).then(res => dispatch({\n    type: GET_SPECS,\n    payload: res.data\n  }));\n};\nexport const productLoading = () => {\n  return {\n    type: PRODUCT_LOADING\n  };\n};","map":{"version":3,"sources":["Z:\\Projects\\desktopninjaapp\\client\\src\\redux\\actions\\productActions.js"],"names":["axios","GET_PRODUCT","PRODUCT_LOADING","GET_SPECS","getItems","dispatch","productLoading","get","then","res","type","payload","data","getItemsId","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAqBC,eAArB,EAAsCC,SAAtC,QAAuD,iBAAvD;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAU,kCAAV,EACCC,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAET,WADY;AAElBU,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADrB;AAKH,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQT,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAU,sCAAqCO,EAA/C,EACCN,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEP,SADY;AAElBQ,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADrB;AAKH,CAPM;AAUP,OAAO,MAAMN,cAAc,GAAG,MAAM;AAChC,SAAM;AACFI,IAAAA,IAAI,EAAER;AADJ,GAAN;AAGH,CAJM","sourcesContent":["import axios from 'axios'\nimport { GET_PRODUCT,PRODUCT_LOADING, GET_SPECS } from './typesOfAction'\n\nexport const getItems = () => dispatch => {\n    dispatch(productLoading())\n    axios.get('http://localhost:5000/processors')\n    .then(res => dispatch({\n        type: GET_PRODUCT,\n        payload: res.data\n    }))\n}\n\nexport const getItemsId = (id) => dispatch => {\n    dispatch(productLoading())\n    axios.get('http://localhost:5000/processors/'+ id)\n    .then(res => dispatch({\n        type: GET_SPECS,\n        payload: res.data\n    }))\n}\n\n\nexport const productLoading = () => {\n    return{\n        type: PRODUCT_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}